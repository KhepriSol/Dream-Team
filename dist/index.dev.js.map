{"version":3,"sources":["index.js"],"names":["Manager","require","Engineer","Intern","inquirer","path","fs","OUTPUT_DIR","resolve","__dirname","outputPath","join","generateTeam","teamArray","runApp","createTeam","prompt","type","message","name","choices","then","userInput","addEmployeePrompt","addManager","addEngineer","addIntern","htmlBuilder","managerName","managerId","managerEmail","managerOfficeNumber","push","engineerName","engineerId","engineerEmail","engineerGithub","internName","internId","internEmail","internSchool","console","log","writeFileSync"],"mappings":"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","sourcesContent":["const Manager = require(\"./lib/Manager.js\");\r\nconst Engineer = require(\"./lib/Engineer.js\");\r\nconst Intern = require(\"./lib/Intern.js\");\r\nconst inquirer = require(\"inquirer\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nconst OUTPUT_DIR = path.resolve(__dirname, \"output\");\r\nconst outputPath = path.join(OUTPUT_DIR, \"team.html\");\r\nconst generateTeam = require(\"./src/template.js\")\r\n\r\nteamArray = [];\r\n\r\nfunction runApp () {\r\n\r\n  function createTeam () {\r\n    inquirer.prompt([{\r\n      type: \"list\",\r\n      message: \"What type of employee would you like to add to your team?\",\r\n      name: \"addEmployeePrompt\",\r\n      choices: [\"Manager\", \"Engineer\", \"Intern\", \"No more team members are needed.\"]\r\n    }]).then(function (userInput) {\r\n      switch(userInput.addEmployeePrompt) {\r\n        case \"Manager\":\r\n          addManager();\r\n          break;\r\n        case \"Engineer\":\r\n          addEngineer();\r\n          break;\r\n        case \"Intern\":\r\n          addIntern();\r\n          break;\r\n\r\n        default:\r\n          htmlBuilder();\r\n      }\r\n    })\r\n  }\r\n\r\n  //Prompts to ask the person\r\n\r\n  function addManager() {\r\n    inquirer.prompt([\r\n      { type: \"input\", name: \"managerName\", message: \"What is the manager's name?\" },\r\n      { type: \"input\", name: \"managerId\", message: \"What is the manager's employee ID number?\" },\r\n      { type: \"input\", name: \"managerEmail\", message: \"What is the manager's email address?\" },\r\n      { type: \"input\", name: \"managerOfficeNumber\", message: \"What is the manager's office number?\" }\r\n    ]).then(({managerName, managerId, managerEmail, managerOfficeNumber}) => {\r\n      teamArray.push(new Manager(managerName, managerId, managerEmail, managerOfficeNumber));\r\n      createTeam();\r\n    });\r\n  }\r\n  \r\n  function addEngineer() {\r\n    inquirer.prompt([\r\n      { type: \"input\", name: \"engineerName\", message: \"What is the engineer's name?\" },\r\n      { type: \"input\", name: \"engineerId\", message: \"What is the engineer's employee ID number?\" },\r\n      { type: \"input\", name: \"engineerEmail\", message: \"What is the engineer's email address?\" },\r\n      { type: \"input\", name: \"engineerGithub\", message: \"What is the engineer's GitHub username?\" }\r\n    ]).then(({engineerName, engineerId, engineerEmail, engineerGithub}) => {\r\n      teamArray.push(new Engineer(engineerName, engineerId, engineerEmail, engineerGithub));\r\n      createTeam();\r\n    });\r\n  }\r\n  \r\n  function addIntern() {\r\n    inquirer.prompt([\r\n      { type: \"input\", name: \"internName\", message: \"What is the intern's name?\" },\r\n      { type: \"input\", name: \"internId\", message: \"What is the intern's employee ID number?\" },\r\n      { type: \"input\", name: \"internEmail\", message: \"What is the intern's email address?\" },\r\n      { type: \"input\", name: \"internSchool\", message: \"What school does the intern attend?\" }\r\n    ]).then(({internName, internId, internEmail, internSchool}) => {\r\n      teamArray.push(new Intern(internName, internId, internEmail, internSchool));\r\n      createTeam();\r\n    });\r\n  }\r\n  \r\n\r\n\r\n\r\nfunction htmlBuilder () {\r\n    console.log(\"Team created!\")\r\n\r\n    fs.writeFileSync(outputPath, generateTeam(teamArray), \"UTF-8\")\r\n\r\n}\r\n\r\ncreateTeam();\r\n\r\n}\r\n\r\nrunApp();"],"file":"index.dev.js"}