{"version":3,"sources":["index.js"],"names":["_Manager","_interopRequireDefault","require","_Engineer","_Intern","_inquirer","_path","_fs","_template","OUTPUT_DIR","path","resolve","__dirname","outputPath","join","teamArray","createTeam","inquirer","prompt","type","name","then","_ref","addEmployeePrompt","message","addEmployee","employeeType","htmlBuilder","concat","toLowerCase","questions","push","answers","Manager","id","email","officeNumber","Engineer","github","Intern","school","console","log","fs","writeFileSync"],"mappings":"aAAA,IAAAA,SAAAC,uBAAAC,QAAA,qBACAC,UAAAF,uBAAAC,QAAA,sBADAE,QAAAH,uBAAAC,QAAA,oBAGAG,UAAAJ,uBAAAC,QAAA,aAFAI,MAAAL,uBAAAC,QAAA,SAIAK,IAAAN,uBAAAC,QAAA,OAHAM,UAAAP,uBAAAC,QAAA,8FACA,IAAAO,WAAAC,MAAAA,QAAAC,QAAAC,UAAA,UAMMC,WAAaH,MAAAA,QAAKI,KAAKL,WAAY,aAEnCM,UAAY,GAElB,SAASC,aAPTC,UAAAA,QASKC,OAAO,CACN,CACEC,KAAM,OATRV,QAAaC,4DAWXU,KAAM,oBAVRP,QAAaH,CAAAA,UAAAA,WAAUD,SAAY,uCAcpCY,KAAK,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,kBAVS,qCAAbP,EACPC,cAIMO,YAASD,KAcjB,SAASE,YAAYC,GARf,IAAIH,EAAAA,CACFI,CADFR,KAEO,QACLM,KAAAA,OACDD,QAAA,eAAAI,OAAAF,EAAAG,cAAA,aAEN,CAUKV,KAAM,QARZC,KAASK,KACDK,QAAAA,eAAAA,OACJJ,EAAAG,cADIC,2BAGFV,CACAI,KAAO,QAETJ,KAAA,QACED,QAAM,eAAAS,OADRF,EAAAG,cACQ,uBAKNV,OAAMO,GACNN,IAAI,UACJI,EAAOO,KAAA,CAdXZ,KAAA,QAsBMC,KAAM,eAJZI,QAAQE,yCAEJI,MACEX,IAAAA,WACAC,EAAMW,KAAA,CACNP,KAAAA,QAHFJ,KAAA,SAKAI,QAAA,4CACF,MACEM,IAAAA,SACEX,EAAMY,KADO,CAEbX,KAAM,QACNI,KAAAA,SAHFA,QAAA,wCAQEL,UAAAA,QAAAA,OAAMW,GADOT,KAAA,SAAAW,GAEbZ,OAAIM,GACJF,IAAAA,UAHFT,UAAAgB,KAAA,IAAAE,SAAAA,QAAAD,EAAAZ,KAAAY,EAAAE,GAAAF,EAAAG,MAAAH,EAAAI,eAKA,MArBJ,IAAA,WA8BMrB,UAAUgB,KAAK,IAAIM,UAAAA,QAASL,EAAQZ,KAAMY,EAAQE,GAAIF,EAAQG,MAAOH,EAAQM,SANnFrB,MACE,IAAA,SACEF,UAAKgB,KAAL,IAAAQ,QAAAA,QAAAP,EAAAZ,KAAAY,EAAAE,GAAAF,EAAAG,MAAAH,EAAAQ,SAUFxB,eAIJ,SAASW,cARHc,QAAKC,IAAA,iBAEHC,IAAAA,QAAAC,cAAA/B,YAAA,EAAAL,UAAA,SAAAO,WAAA,SAGLC,aAICyB","file":"index.min.js","sourcesContent":["import Manager from \"./lib/Manager.js\";\r\nimport Engineer from \"./lib/Engineer.js\";\r\nimport Intern from \"./lib/Intern.js\";\r\nimport inquirer from \"inquirer\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport generateTeam from \"./src/template.js\";\r\n\r\nconst OUTPUT_DIR = path.resolve(__dirname, \"output\");\r\nconst outputPath = path.join(OUTPUT_DIR, \"team.html\");\r\n\r\nconst teamArray = [];\r\n\r\nfunction createTeam() {\r\n  inquirer\r\n    .prompt([\r\n      {\r\n        type: \"list\",\r\n        message: \"What type of employee would you like to add to your team?\",\r\n        name: \"addEmployeePrompt\",\r\n        choices: [\"Manager\", \"Engineer\", \"Intern\", \"No more team members are needed.\"]\r\n      }\r\n    ])\r\n    .then(({ addEmployeePrompt }) => {\r\n      if (addEmployeePrompt === \"No more team members are needed.\") {\r\n        htmlBuilder();\r\n      } else {\r\n        addEmployee(addEmployeePrompt);\r\n      }\r\n    });\r\n}\r\n\r\nfunction addEmployee(employeeType) {\r\n  const questions = [\r\n    {\r\n      type: \"input\",\r\n      name: \"name\",\r\n      message: `What is the ${employeeType.toLowerCase()}'s name?`\r\n    },\r\n    {\r\n      type: \"input\",\r\n      name: \"id\",\r\n      message: `What is the ${employeeType.toLowerCase()}'s employee ID number?`\r\n    },\r\n    {\r\n      type: \"input\",\r\n      name: \"email\",\r\n      message: `What is the ${employeeType.toLowerCase()}'s email address?`\r\n    }\r\n  ];\r\n\r\n  switch (employeeType) {\r\n    case \"Manager\":\r\n      questions.push({\r\n        type: \"input\",\r\n        name: \"officeNumber\",\r\n        message: \"What is the manager's office number?\"\r\n      });\r\n      break;\r\n    case \"Engineer\":\r\n      questions.push({\r\n        type: \"input\",\r\n        name: \"github\",\r\n        message: \"What is the engineer's GitHub username?\"\r\n      });\r\n      break;\r\n    case \"Intern\":\r\n      questions.push({\r\n        type: \"input\",\r\n        name: \"school\",\r\n        message: \"What school does the intern attend?\"\r\n      });\r\n      break;\r\n  }\r\n\r\n  inquirer.prompt(questions).then(answers => {\r\n    switch (employeeType) {\r\n      case \"Manager\":\r\n        teamArray.push(new Manager(answers.name, answers.id, answers.email, answers.officeNumber));\r\n        break;\r\n      case \"Engineer\":\r\n        teamArray.push(new Engineer(answers.name, answers.id, answers.email, answers.github));\r\n        break;\r\n      case \"Intern\":\r\n        teamArray.push(new Intern(answers.name, answers.id, answers.email, answers.school));\r\n        break;\r\n    }\r\n    createTeam();\r\n  });\r\n}\r\n\r\nfunction htmlBuilder () {\r\n    console.log(\"Team created!\")\r\n\r\n    fs.writeFileSync(outputPath, generateTeam(teamArray), \"UTF-8\")\r\n\r\n}\r\n\r\ncreateTeam();\r\n\r\n\r\n\r\nrunApp();"]}