"use strict";var Manager=require("./lib/Manager.js"),Engineer=require("./lib/Engineer.js"),Intern=require("./lib/Intern.js"),inquirer=require("inquirer"),path=require("path"),fs=require("fs"),OUTPUT_DIR=path.resolve(__dirname,"output"),outputPath=path.join(OUTPUT_DIR,"team.html"),generateTeam=require("./src/template.js");function runApp(){function i(){inquirer.prompt([{type:"list",message:"What type of employee would you like to add to your team?",name:"addEmployeePrompt",choices:["Manager","Engineer","Intern","No more team members are needed."]}]).then(function(e){switch(e.addEmployeePrompt){case"Manager":inquirer.prompt([{type:"input",name:"managerName",message:"What is the manager's name?"},{type:"input",name:"managerId",message:"What is the manager's employee ID number?"},{type:"input",name:"managerEmail",message:"What is the manager's email address?"},{type:"input",name:"managerOfficeNumber",message:"What is the manager's office number?"}]).then(function(e){var n=e.managerName,a=e.managerId,r=e.managerEmail,t=e.managerOfficeNumber;teamArray.push(new Manager(n,a,r,t)),i()});break;case"Engineer":inquirer.prompt([{type:"input",name:"engineerName",message:"What is the engineer's name?"},{type:"input",name:"engineerId",message:"What is the engineer's employee ID number?"},{type:"input",name:"engineerEmail",message:"What is the engineer's email address?"},{type:"input",name:"engineerGithub",message:"What is the engineer's GitHub username?"}]).then(function(e){var n=e.engineerName,a=e.engineerId,r=e.engineerEmail,t=e.engineerGithub;teamArray.push(new Engineer(n,a,r,t)),i()});break;case"Intern":inquirer.prompt([{type:"input",name:"internName",message:"What is the intern's name?"},{type:"input",name:"internId",message:"What is the intern's employee ID number?"},{type:"input",name:"internEmail",message:"What is the intern's email address?"},{type:"input",name:"internSchool",message:"What school does the intern attend?"}]).then(function(e){var n=e.internName,a=e.internId,r=e.internEmail,t=e.internSchool;teamArray.push(new Intern(n,a,r,t)),i()});break;default:console.log("Team created!"),fs.writeFileSync(outputPath,generateTeam(teamArray),"UTF-8")}})}i()}teamArray=[],runApp();
//# sourceMappingURL=index.min.js.map
